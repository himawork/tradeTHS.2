if (moneyTF & bandCrovalue) {
cat(paste0('Test buy condition of ',Scode,'...\n'))
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Current = getPrice(Scode = Scode)
ChangeRate = (Current - Close)/Close * 100
sdJ1 = dailyK.old[1,'J'] - dailyK.old[2,'J'];sdJ2 = dailyK.old[2,'J'] - dailyK.old[3,'J']
sdJ1 = ifelse(!anyNA(sdJ1),sdJ1,0); sdJ2 = ifelse(!anyNA(sdJ2),sdJ2,0);
dayPriT <- Current <= (max(dailyK.old$HIGH[1:7]) * 0.2  + min(dailyK.old$LOW[1:7]) * 0.8)
# test buy condition...
if (sdJ1 > sdJ2 & Current > 10 & Current < 30 & dailyK.old[1,'J'] < 90 & dayPriT) {
if (indicator == 'sting') {
if (ChangeRate <= -8) {
cat('Gobuy.1000 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 1000); DoneBuy10 = c(DoneBuy10,Scode)
money = money - Current * 1000
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.500 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -2 & ChangeRate > -5) {
cat('Gobuy.300 with ChangeRate <= -2\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
} else if (dayPriT) {
cat('Gobuy.300 with Current < dayPriT\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
}
} else if (indicator == 'running') {
if (ChangeRate <= -8) {
cat('Gobuy.500 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.200 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 200); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 200
if (money < 30000) {moneyTF = FALSE}
}
}
}
}  }
indicator = read.table('e:/tess/indicator.info')[1,1]
source('E:/NewPC/THS/NewAutoUpdate.R')
source('E:/NewPC/THS/NewAutoUpdate.R')
source('e:/Scientist career/R_files/201911/THS/AutoUpdate.R', echo = F, encoding = 'UTF-8')
tryCatch({
source('e:/Scientist career/R_files/201911/THS/AutoUpdate.R', echo = F, encoding = 'UTF-8')
}, error = function(err) {
print('Re-execute auto trade...')
})
Scode
ScodeNums = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
exclude = read.table('e:/tess/exclude.info',colClasses = 'character')[,1]
testCode = ScodeNums[which(!ScodeNums %in% exclude)]
if (length(testCode) > 0) {
for (Scode in testCode) {
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
if (moneyTF & bandCrovalue) {
cat(paste0('Test buy condition of ',Scode,'...\n'))
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Current = getPrice(Scode = Scode)
ChangeRate = (Current - Close)/Close * 100
sdJ1 = dailyK.old[1,'J'] - dailyK.old[2,'J'];sdJ2 = dailyK.old[2,'J'] - dailyK.old[3,'J']
sdJ1 = ifelse(!anyNA(sdJ1),sdJ1,0); sdJ2 = ifelse(!anyNA(sdJ2),sdJ2,0);
dayPriT <- Current <= (max(dailyK.old$HIGH[1:7]) * 0.2  + min(dailyK.old$LOW[1:7]) * 0.8)
# test buy condition...
if (sdJ1 > sdJ2 & Current > 10 & Current < 30 & dailyK.old[1,'J'] < 90 & dayPriT) {
if (indicator == 'sting') {
if (ChangeRate <= -8) {
cat('Gobuy.1000 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 1000); DoneBuy10 = c(DoneBuy10,Scode)
money = money - Current * 1000
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.500 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -2 & ChangeRate > -5) {
cat('Gobuy.300 with ChangeRate <= -2\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
} else if (dayPriT) {
cat('Gobuy.300 with Current < dayPriT\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
}
} else if (indicator == 'running') {
if (ChangeRate <= -8) {
cat('Gobuy.500 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.200 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 200); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 200
if (money < 30000) {moneyTF = FALSE}
}
}
}
}  }
HstoInfo()
# test whether to change the auto trading script
source('e:/NewPC/THS/testHstoNum.R', echo = F, encoding = 'UTF-8')
}   }
moneyTF = TRUE
for (Scode in testCode) {
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
if (moneyTF & bandCrovalue) {
cat(paste0('Test buy condition of ',Scode,'...\n'))
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Current = getPrice(Scode = Scode)
ChangeRate = (Current - Close)/Close * 100
sdJ1 = dailyK.old[1,'J'] - dailyK.old[2,'J'];sdJ2 = dailyK.old[2,'J'] - dailyK.old[3,'J']
sdJ1 = ifelse(!anyNA(sdJ1),sdJ1,0); sdJ2 = ifelse(!anyNA(sdJ2),sdJ2,0);
dayPriT <- Current <= (max(dailyK.old$HIGH[1:7]) * 0.2  + min(dailyK.old$LOW[1:7]) * 0.8)
# test buy condition...
if (sdJ1 > sdJ2 & Current > 10 & Current < 30 & dailyK.old[1,'J'] < 90 & dayPriT) {
if (indicator == 'sting') {
if (ChangeRate <= -8) {
cat('Gobuy.1000 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 1000); DoneBuy10 = c(DoneBuy10,Scode)
money = money - Current * 1000
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.500 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -2 & ChangeRate > -5) {
cat('Gobuy.300 with ChangeRate <= -2\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
} else if (dayPriT) {
cat('Gobuy.300 with Current < dayPriT\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
}
} else if (indicator == 'running') {
if (ChangeRate <= -8) {
cat('Gobuy.500 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.200 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 200); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 200
if (money < 30000) {moneyTF = FALSE}
}
}
}
}  }
# update info of sting stocks after market closing...
tryCatch({source('e:/Scientist career/R_files/201911/THS/UpdateStoInfo.R',
local = T, echo = F, encoding = 'UTF-8')}, error = function(err) {
print('Re-Source updateStoinfo.R...');
source('e:/Scientist career/R_files/201911/THS/UpdateStoInfo.R',
local = T, echo = F, encoding = 'UTF-8')
})
shell('start /MAX /D "C:\\同花顺软件\\同花顺" xiadan.exe',wait = F)
names(readRDS('e:/tess/SpySto.RDS')[['sting']])
library(rMouse)
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
library(rJava)
install.packages('rMouse')
install.packages("rMouse")
install.packages("rMouse")
install.packages("rMouse")
shell('start /MAX /D "C:\\同花顺软件\\同花顺" xiadan.exe',wait = F)
remove.packages('rJava')
library(rJava)
install.packages(rJava)
install.packages(rjava)
remove.packages('rMouse')
install.packages(rMouse)
install.packages('rMouse')
library(rMouse)
install.packages('rMouse')
library(rMouse)
install.packages('rMouse')
install.packages('rMouse')
update.packages(ask=F)
update.packages(ask = F)
javareconf
sessionInfo()
library(rMouse)
library(rJava)
Sys.setenv()
Sys.info()
# load functions
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
# update info of sting stocks ----
ScodeNums = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
remDr <- remoteDriver(browserName = "chrome", remoteServerAddr = "localhost", port = 4444)
shell('java -Dwebdriver.chrome.driver="E:/500px/Selenium/chromedriver.exe" -jar "E:/500px/Selenium/selenium-server-standalone-3.141.59.jar" -port 4444', wait = F)
remDr$open();remDr$setWindowPosition(-1980,-890);remDr$setWindowSize(2000,1400)
SpySto(type = 'sting',update = T, StingStoNum = ScodeNums)
shell('taskkill /F /IM chromedriver.exe')
shell('taskkill /F /IM chrome.exe')
shell('start /MAX /D "C:\\同花顺软件\\同花顺" xiadan.exe',wait = F)
(as.Date(file.mtime('e:/tess/DailyRealPrice.RDS')) != Sys.Date())
as.Date(file.mtime('e:/tess/DailyRealPrice.RDS'))
# refresh DailyRealPrice
if (as.Date(file.mtime('e:/tess/DailyRealPrice.RDS')) != Sys.Date()) {
DailyRealPrice = NULL;
saveRDS(DailyRealPrice,'e:/tess/DailyRealPrice.RDS')}
DailyRealPrice = NULL;
saveRDS(DailyRealPrice,'e:/tess/DailyRealPrice.RDS')
(as.Date(file.mtime('e:/tess/DailyRealPrice.RDS')) != Sys.Date())
# load functions
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
# softStrokeit()
# NetWlan()
Xiadan()
keybd.press('Alt+space');    Sys.sleep(2)
update.packages(ask = F)
# load libraries
library(KeyboardSimulator); library(magick);
keybd.press('Alt+space');    Sys.sleep(2)
# load functions
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
# softStrokeit()
# NetWlan()
Xiadan()
# load functions
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
moneyTF = TRUE
ScodeNums = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
exclude = read.table('e:/tess/exclude.info',colClasses = 'character')[,1]
testCode = ScodeNums[which(!ScodeNums %in% exclude)]
Sys.sleep(10);          for (Scode in testCode) {
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
if (moneyTF & bandCrovalue) {
cat(paste0('Test buy condition of ',Scode,'...\n'))
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Current = getPrice(Scode = Scode)
ChangeRate = (Current - Close)/Close * 100
sdJ1 = dailyK.old[1,'J'] - dailyK.old[2,'J'];sdJ2 = dailyK.old[2,'J'] - dailyK.old[3,'J']
sdJ1 = ifelse(!anyNA(sdJ1),sdJ1,0); sdJ2 = ifelse(!anyNA(sdJ2),sdJ2,0);
dayPriT <- Current <= (max(dailyK.old$HIGH[1:7]) * 0.2  + min(dailyK.old$LOW[1:7]) * 0.8)
# test buy condition...
if (sdJ1 > sdJ2 & Current > 10 & Current < 30 & dailyK.old[1,'J'] < 90 & dayPriT) {
if (indicator == 'sting') {
if (ChangeRate <= -8) {
cat('Gobuy.1000 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 1000); DoneBuy10 = c(DoneBuy10,Scode)
money = money - Current * 1000
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.500 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -2 & ChangeRate > -5) {
cat('Gobuy.300 with ChangeRate <= -2\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
} else if (dayPriT) {
cat('Gobuy.300 with Current < dayPriT\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
}
} else if (indicator == 'running') {
if (ChangeRate <= -8) {
cat('Gobuy.500 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.200 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 200); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 200
if (money < 30000) {moneyTF = FALSE}
}
}
}
}  }
indicator = read.table('e:/tess/indicator.info')[1,1]
Sys.sleep(10);          for (Scode in testCode) {
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
if (moneyTF & bandCrovalue) {
cat(paste0('Test buy condition of ',Scode,'...\n'))
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Current = getPrice(Scode = Scode)
ChangeRate = (Current - Close)/Close * 100
sdJ1 = dailyK.old[1,'J'] - dailyK.old[2,'J'];sdJ2 = dailyK.old[2,'J'] - dailyK.old[3,'J']
sdJ1 = ifelse(!anyNA(sdJ1),sdJ1,0); sdJ2 = ifelse(!anyNA(sdJ2),sdJ2,0);
dayPriT <- Current <= (max(dailyK.old$HIGH[1:7]) * 0.2  + min(dailyK.old$LOW[1:7]) * 0.8)
# test buy condition...
if (sdJ1 > sdJ2 & Current > 10 & Current < 30 & dailyK.old[1,'J'] < 90 & dayPriT) {
if (indicator == 'sting') {
if (ChangeRate <= -8) {
cat('Gobuy.1000 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 1000); DoneBuy10 = c(DoneBuy10,Scode)
money = money - Current * 1000
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.500 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -2 & ChangeRate > -5) {
cat('Gobuy.300 with ChangeRate <= -2\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
} else if (dayPriT) {
cat('Gobuy.300 with Current < dayPriT\n')
GoBuy(Stock = Scode, plusN = 300); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 300
if (money < 30000) {moneyTF = FALSE}
}
} else if (indicator == 'running') {
if (ChangeRate <= -8) {
cat('Gobuy.500 with ChangeRate <= -8\n')
GoBuy(Stock = Scode, plusN = 500); DoneBuy5 = c(DoneBuy5,Scode)
money = money - Current * 500
if (money < 30000) {moneyTF = FALSE}
} else if (ChangeRate <= -5 & ChangeRate > -8) {
cat('Gobuy.200 with ChangeRate <= -5\n')
GoBuy(Stock = Scode, plusN = 200); DoneBuy2 = c(DoneBuy2,Scode)
money = money - Current * 200
if (money < 30000) {moneyTF = FALSE}
}
}
}
}  }
# prepare parameters for trading
DoneBuy10 = NULL;DoneBuy7 = NULL;DoneBuy5 = NULL;DoneBuy2 = NULL
# send trading messages
sys.user = Sys.info()[['nodename']]
T.invest = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$市值))
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$盈亏))
Hsto.info = readRDS('e:/tess/Hsto.info.RDS')
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$参考盈亏))
DailyRealPrice = readRDS('e:/tess/DailyRealPrice.RDS')
ScodeNums = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
Spycode = readRDS('e:/tess/Hsto.info.RDS')$证券代码
testCode = ScodeNums[which(!ScodeNums %in% Spycode)]
exclude = read.table('e:/tess/exclude.info',colClasses = 'character')[,1]
testCode1 = testCode[which(!testCode %in% exclude)]
shell('start /MIN /D "C:\\Program Files (x86)\\Oray\\SunLogin\\SunloginClient" SunloginClient.exe',wait = F)
Hsto.info = readRDS('e:/tess/Hsto.info.RDS')
T.invest = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$市值))
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$参考盈亏))
Hsto.info = readRDS('e:/tess/Hsto.info.RDS')
T.invest = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$市值))
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$参考盈亏))
Spycode = readRDS('e:/tess/Hsto.info.RDS')$证券代码
indicator = read.table('e:/tess/indicator.info')[1,1]
Scode = c('002552')
ProLess <- (Hdays %/% 30 + 1) * 200
Hdays <-  Hsto.info$持股天数[which(Hsto.info$证券代码 == Scode)] %>% as.numeric()
library(rvest)
Hdays <-  Hsto.info$持股天数[which(Hsto.info$证券代码 == Scode)] %>% as.numeric()
ProLess <- (Hdays %/% 30 + 1) * 200
RealPrice = readRDS('e:/tess/RealPrice.RDS')
for (n in 1:length(RealPrice)) {
if (length(RealPrice[[n]][[1]]) > limitN) {RealPrice[[n]][[1]] = RealPrice[[n]][[1]][1:limitN]}
}
imitN = 1000
for (n in 1:length(RealPrice)) {
if (length(RealPrice[[n]][[1]]) > limitN) {RealPrice[[n]][[1]] = RealPrice[[n]][[1]][1:limitN]}
}
limitN = 1000
for (n in 1:length(RealPrice)) {
if (length(RealPrice[[n]][[1]]) > limitN) {RealPrice[[n]][[1]] = RealPrice[[n]][[1]][1:limitN]}
}
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$盈亏))
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$参考盈亏))
as.numeric(readRDS('e:/tess/Hsto.info.RDS')$盈亏)
Hist = readRDS('e:/tess/Hsto.info.RDS')
DailyTrade = readRDS('e:/tess/DailyTrading.RDS')
RealPrice = readRDS('e:/tess/RealPrice.RDS')
# load functions
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
dydata()
RealPrice = readRDS('e:/tess/RealPrice.RDS')
DailyTrade = readRDS('e:/tess/DailyTrading.RDS')
DailyRealPrice = readRDS('e:/tess/DailyRealPrice.RDS')
Spycode = readRDS('e:/tess/Hsto.info.RDS')$证券代码
indicator = read.table('e:/tess/indicator.info')[1,1]
ScodeNums = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
Spycode = readRDS('e:/tess/Hsto.info.RDS')$证券代码
testCode = ScodeNums[which(!ScodeNums %in% Spycode)]
exclude = read.table('e:/tess/exclude.info',colClasses = 'character')[,1]
testCode1 = testCode[which(!testCode %in% exclude)]
testCode1
Scode = testCode1[1]
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Close3 = dailyK.old$CLOSE[3]
Close7 = dailyK.old$CLOSE[7]
ChangeRate3 = (Close - Close3)/Close3 * 100
ChangeRate7 = (Close - Close7)/Close7 * 100
ChangeRateTest = (ChangeRate3 > -2 & ChangeRate7 < -5  &
min(dailyK.old$CLOSE[1:3]) <= min(dailyK.old$CLOSE[1:30]))
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
Scode = testCode1[2]
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Close3 = dailyK.old$CLOSE[3]
Close7 = dailyK.old$CLOSE[7]
ChangeRate3 = (Close - Close3)/Close3 * 100
ChangeRate7 = (Close - Close7)/Close7 * 100
ChangeRateTest = (ChangeRate3 > -2 & ChangeRate7 < -5  &
min(dailyK.old$CLOSE[1:3]) <= min(dailyK.old$CLOSE[1:30]))
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
Scode = testCode1[3]
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Close3 = dailyK.old$CLOSE[3]
Close7 = dailyK.old$CLOSE[7]
ChangeRate3 = (Close - Close3)/Close3 * 100
ChangeRate7 = (Close - Close7)/Close7 * 100
ChangeRateTest = (ChangeRate3 > -2 & ChangeRate7 < -5  &
min(dailyK.old$CLOSE[1:3]) <= min(dailyK.old$CLOSE[1:30]))
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
Scode = testCode1[6]
dailyK.old = readRDS('e:/tess/SpySto.RDS')[['sting']][[Scode]][['dailyK']]
Close = dailyK.old$CLOSE[1]
Close3 = dailyK.old$CLOSE[3]
Close7 = dailyK.old$CLOSE[7]
ChangeRate3 = (Close - Close3)/Close3 * 100
ChangeRate7 = (Close - Close7)/Close7 * 100
ChangeRateTest = (ChangeRate3 > -2 & ChangeRate7 < -5  &
min(dailyK.old$CLOSE[1:3]) <= min(dailyK.old$CLOSE[1:30]))
bandCrovalue = testbandCro(Scode,Type = 'sting', K_type = 'dailyK',bandFrom = 10, bandNum = 4)
source('e:/Scientist career/R_files/201911/THS/Functions.R',echo = F,encoding = 'UTF-8')
StingStoNum = names(readRDS('e:/tess/SpySto.RDS')[['sting']])
remDr <- remoteDriver(browserName = "chrome", remoteServerAddr = "localhost", port = 4444)
shell('java -Dwebdriver.chrome.driver="E:/500px/Selenium/chromedriver.exe" -jar "E:/500px/Selenium/selenium-server-standalone-3.141.59.jar" -port 4444', wait = F)
remDr$open();remDr$setWindowSize(2000,1400)
compTime = Sys.Date() - 1
SpySto.db = readRDS('e:/tess/SpySto.RDS')
for (Num in 1:length(StingStoNum)) {
t = StingStoNum[Num]
remDr$navigate(paste0('http://stockpage.10jqka.com.cn/',t))
Sys.sleep(3);  page.raw = remDr$getPageSource()[[1]][1]
## get company details
Company = CompanyDetail()
CCompany = cbind.data.frame(compTime, Company)
SpySto.db[['sting']][[t]][['Company']] = CCompany
## get stock trading details
StoDetail = StoTradeDetail(page.raw)
CStoDetail = cbind.data.frame(compTime, StoDetail)
SpySto.db[['sting']][[t]][['CStoDetail']] = CStoDetail
if (interactive()) {
multicolor::multi_color(paste0('\t\n\t\n',Num,'/',length(StingStoNum),':\n',t))
print(Company);
print(StoDetail)
} else {cat(paste0('\t\n\t\n',Num,'/',length(StingStoNum),': ',t))}
}
#
saveRDS(SpySto.db,'e:/tess/SpySto.RDS')
View(SpySto.db)
shell('start /MIN /D "C:\\Program Files (x86)\\Oray\\SunLogin\\SunloginClient" SunloginClient.exe',wait = F)
# T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$盈亏))
T.profit = sum(as.numeric(readRDS('e:/tess/Hsto.info.RDS')$参考盈亏))
Hsto.info = readRDS('e:/tess/Hsto.info.RDS')
DailyTrade = readRDS('e:/tess/DailyTrading.RDS')
DailyRealPrice = readRDS('e:/tess/DailyRealPrice.RDS')
K.old = readRDS('e:/tess/SpySto.RDS')[['sting']]
View(K.old)
install.packages(c("blogdown", "devtools"))
# copy tesseract lan to
sys.user = Sys.info()[['user']]
#### build reports and post on blog
# 1. install software Git.exe
shell('start "" \"e:/NewPC/software/Git-2.26.2-64-bit.exe\"', wait = F)
# 2. install blogdown packages
if (!require('blogdown')) {install.packages('blogdown')}
# or devtools::install_github('rstudio/blogdown')
# blogdown::hugo_version()
# blogdown::update_hugo()
# 3. install hugo.exe or install online
blogdown:::install_hugo_bin('e:/NewPC/software/hugo.exe') # or
blogdown::hugo_version()
# 4 blog first webpages
# goto default dir
defaultDir = 'e:/Scientist career/R_files/202005/blogdown/'
if (dir.exists(defaultDir)) {
setwd(defaultDir)
} else {dir.create(defaultDir, recursive = T); setwd(defaultDir)}
blogdown::new_site()
file.copy('e:/NewPC/software/blogdown/config.toml', './config.toml', overwrite = T)
file.copy('e:/NewPC/software/blogdown/main.css', './themes/hugo-lithium/static/css/main.css', overwrite = T)
file.copy('e:/NewPC/software/blogdown/logo.png', './themes/hugo-lithium/static/images/logo.png', overwrite = T)
blogdown::new_post(title = 'HangQingMap', author = 'Himawork',
open = F, file = 'hangqing/hangqing.Rmd', # ext = '.Rmd' # use ext without file variable
categories = c("R", "HTML"), tags = c("Reports", "HangQ"))
# rendering new post pages
blogdown::build_site(local = T,method = 'html')
